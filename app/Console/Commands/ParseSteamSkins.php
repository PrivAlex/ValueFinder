<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;
use Illuminate\Support\Facades\Http;
use Illuminate\Support\Facades\Log;

class ParseSteamSkins extends Command
{
    /**
     * –ù–∞–∑–≤–∞–Ω–∏–µ –∏ —Å–∏–≥–Ω–∞—Ç—É—Ä–∞ –∫–æ–º–∞–Ω–¥—ã.
     *
     * --item="..."    : market_hash_name –ø—Ä–µ–¥–º–µ—Ç–∞ (–º–æ–∂–Ω–æ —Å –ø—Ä–æ–±–µ–ª–∞–º–∏)
     * --notify        : —Ñ–ª–∞–≥ ‚Äî –ø–æ—Å–ª–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram –¥–∞–∂–µ –µ—Å–ª–∏ –ø–æ—Ä–æ–≥ –Ω–µ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç (–¥–ª—è —Ç–µ—Å—Ç–∞)
     */
    protected $signature = 'app:parse-steam-skins {--item=} {--notify}';

    /**
     * –û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã.
     *
     * @var string
     */
    protected $description = '–ü–∞—Ä—Å–∏–Ω–≥ —Ü–µ–Ω—ã –ø—Ä–µ–¥–º–µ—Ç–∞ –∏–∑ Steam Market –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –≤ Telegram –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —É—Å–ª–æ–≤–∏—è';

    public function handle()
    {
        // 1) —á–∏—Ç–∞–µ–º –æ–ø—Ü–∏–∏
        $item = $this->option('item') ?? 'AK-47 | Redline (Field-Tested)'; // –¥–µ—Ñ–æ–ª—Ç
        $forceNotify = $this->option('notify') ?? false;

        $this->info("–ó–∞–ø—É—Å–∫–∞–µ–º –ø–∞—Ä—Å–µ—Ä –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞: {$item}");

        // 2) —Ñ–æ—Ä–º–∏—Ä—É–µ–º url priceoverview ‚Äî –±—ã—Å—Ç—Ä—ã–π —Å–ø–æ—Å–æ–± —É–∑–Ω–∞—Ç—å —Ü–µ–Ω—É
        // currency=1 -> USD, appid=730 -> CS:GO/CS2 (–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –º–∞—Ä–∫–µ—Ç–∞)
        $encoded = rawurlencode($item);
        $url = "https://steamcommunity.com/market/priceoverview/?currency=1&appid=730&market_hash_name={$encoded}";

        $this->info("–ó–∞–ø—Ä–æ—Å: {$url}");

        try {
            // 3) –¥–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å —Å retry, —Ç–∞–π–º–∞—É—Ç–æ–º –∏ User-Agent (—á—Ç–æ–±—ã —Å–Ω–∏–∑–∏—Ç—å —à–∞–Ω—Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏)
            $response = Http::withHeaders([
                'User-Agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 Chrome/120.0',
            ])
                ->timeout(10)           // —Å–µ–∫
                ->retry(3, 1000)        // retry 3 —Ä–∞–∑–∞ —Å –ø–∞—É–∑–æ–π 1000ms
                ->get($url);

            // 4) –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
            if (! $response->successful()) {
                $this->error("HTTP –æ—à–∏–±–∫–∞: " . $response->status());
                Log::warning('Steam priceoverview returned non-2xx', [
                    'url' => $url,
                    'status' => $response->status(),
                    'body' => $response->body(),
                ]);

                // –ï—Å–ª–∏ 429 (rate limit), –º–æ–∂–Ω–æ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞—Ç—å –ø–∞—É–∑—É
                if ($response->status() === 429) {
                    $this->warn('–ü–æ–ª—É—á–µ–Ω 429 ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ rate-limit. –ü–æ–¥—É–º–∞–π –æ backoff/—É–≤–µ–ª–∏—á–µ–Ω–∏–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –∑–∞–ø—Ä–æ—Å–æ–≤.');
                }

                return Command::FAILURE;
            }

            // 5) –¥–µ–∫–æ–¥–∏—Ä—É–µ–º JSON –∏ —Å–º–æ—Ç—Ä–∏–º –ø–æ–ª—è
            $data = $response->json();

            // –ü–æ–ª—è –≤ priceoverview: lowest_price, median_price, volume (–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ª–æ–∫–∞–ª–∏ –æ–Ω–∏ –º–æ–≥—É—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å)
            $rawLowest = $data['lowest_price'] ?? null;
            $rawMedian = $data['median_price'] ?? null;

            if (! $rawLowest) {
                $this->warn("–¶–µ–Ω–∞ (lowest_price) –Ω–µ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞ ‚Äî body: " . $response->body());
                Log::info('priceoverview missing lowest_price', ['url' => $url, 'body' => $response->body()]);
                return Command::SUCCESS;
            }

            // 6) –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º —Ü–µ–Ω—É –≤ float (–¥–æ–ª–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–æ–≤ —Ç–∏–ø–∞ "$12.34", "US$12.34", "12,34$" –∏ —Ç.–¥.)
            $price = $this->normalizePriceString($rawLowest);

            $this->info("–ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è —Ü–µ–Ω–∞ (USD): {$price}");

            // 7) —É—Å–ª–æ–≤–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:
            //    - –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ—Ä–æ–≥ –∏–∑ .env (NOTIFY_PRICE_THRESHOLD –≤ USD)
            //    - –µ—Å–ª–∏ --notify –∑–∞–¥–∞–Ω, —Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ (–ø–æ–ª–µ–∑–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∞)
            $threshold = (float) env('NOTIFY_PRICE_THRESHOLD', 5); // –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é $5, –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –≤ .env

            if ($forceNotify || $price <= $threshold) {
                $this->info("–£—Å–ª–æ–≤–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ (price={$price} <= threshold={$threshold}) –∏–ª–∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.");

                // —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ:
                $marketUrl = $this->buildMarketUrl($item);
                $message = "üí• <b>–ù–∞–π–¥–µ–Ω –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –ª–æ—Ç!</b>\n";
                $message .= "<b>–ü—Ä–µ–¥–º–µ—Ç:</b> {$item}\n";
                $message .= "<b>–¶–µ–Ω–∞ (lowest):</b> {$rawLowest} ({$price} USD)\n";
                $message .= "<b>–°—Å—ã–ª–∫–∞:</b> {$marketUrl}\n";

                $sent = $this->sendTelegram($message);

                if ($sent) {
                    $this->info("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram.");
                } else {
                    $this->error("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram. –ü—Ä–æ–≤–µ—Ä—å TELEGRAM_BOT_TOKEN –∏ TELEGRAM_CHAT_ID –≤ .env");
                }
            } else {
                $this->info("–£—Å–ª–æ–≤–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ (price={$price} > threshold={$threshold}). –ù–æ—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.");
            }

        } catch (\Throwable $e) {
            // 8) –æ–±—â–∏–π catch ‚Äî –ª–æ–≥–∏—Ä—É–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ
            $this->error("–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ: " . $e->getMessage());
            Log::error('ParseSteamSkins exception', [
                'message' => $e->getMessage(),
                'trace' => $e->getTraceAsString(),
            ]);
            return Command::FAILURE;
        }

        return Command::SUCCESS;
    }

    /**
     * –ù–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É —Å —Ü–µ–Ω–æ–π –≤ float (USD).
     *
     * –ü—Ä–∏–º–µ—Ä—ã –≤—Ö–æ–¥–∞:
     *  - "$12.34"
     *  - "US$ 1,234.56"
     *  - "1 234,56 ‚ÇΩ"
     *  - "12,34"
     */
    protected function normalizePriceString(string $raw): float
    {
        // 1) —É–¥–∞–ª—è–µ–º –Ω–µ—á–∏—Å–ª–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã –∫—Ä–æ–º–µ . –∏ , –∏ -
        // –æ—Å—Ç–∞–≤–∏–º —Ü–∏—Ñ—Ä—ã, —Ç–æ—á–∫—É, –∑–∞–ø—è—Ç—É—é –∏ –º–∏–Ω—É—Å
        $clean = preg_replace('/[^\d\.,-]/u', '', $raw);

        if ($clean === '' || $clean === '-' || $clean === null) {
            return 0.0;
        }

        // 2) –µ—Å–ª–∏ –µ—Å—Ç—å –∏ —Ç–æ—á–∫–∞, –∏ –∑–∞–ø—è—Ç–∞—è ‚Äî —Ä–µ—à–∞–µ–º, —á—Ç–æ –∑–∞–ø—è—Ç–∞—è —ç—Ç–æ —Ç—ã—Å—è—á–Ω—ã–π —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å, —É–¥–∞–ª—è–µ–º –µ—ë
        if (strpos($clean, ',') !== false && strpos($clean, '.') !== false) {
            // –Ω–∞–ø—Ä–∏–º–µ—Ä "1,234.56" -> "1234.56"
            $clean = str_replace(',', '', $clean);
            // —Ç–µ–ø–µ—Ä—å safe to float
            return floatval($clean);
        }

        // 3) –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –∑–∞–ø—è—Ç–∞—è ‚Äî –∑–∞–º–µ–Ω–∏–º –µ—ë –Ω–∞ —Ç–æ—á–∫—É (–µ–≤—Ä–æ–ø–µ–π—Å–∫–∏–π —Ñ–æ—Ä–º–∞—Ç)
        if (strpos($clean, ',') !== false && strpos($clean, '.') === false) {
            $clean = str_replace(',', '.', $clean);
            return floatval($clean);
        }

        // 4) –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ —Ç–æ—á–∫–∞ ‚Äî OK
        return floatval($clean);
    }

    /**
     * –§–æ—Ä–º–∏—Ä—É–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –ª–∏—Å—Ç–∏–Ω–≥ —Ç–æ–≤–∞—Ä–∞ –≤ Steam Market.
     */
    protected function buildMarketUrl(string $marketHashName): string
    {
        $encoded = rawurlencode($marketHashName);
        return "https://steamcommunity.com/market/listings/730/{$encoded}";
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram —á–µ—Ä–µ–∑ Bot API.
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç true –µ—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ (–∫–æ–¥ 200 + ok == true).
     */
    protected function sendTelegram(string $text): bool
    {
        $token = env('TELEGRAM_BOT_TOKEN');
        $chatId = env('TELEGRAM_CHAT_ID');

        if (! $token || ! $chatId) {
            Log::warning('Telegram token or chat id missing', ['token' => (bool)$token, 'chat' => (bool)$chatId]);
            return false;
        }

        $url = "https://api.telegram.org/bot{$token}/sendMessage";

        $response = Http::post($url, [
            'chat_id' => $chatId,
            'text' => $text,
            'parse_mode' => 'HTML',
            'disable_web_page_preview' => true,
        ]);

        if ($response->successful()) {
            $body = $response->json();
            return isset($body['ok']) && $body['ok'] === true;
        }

        Log::error('Telegram send failed', ['status' => $response->status(), 'body' => $response->body()]);
        return false;
    }
}
